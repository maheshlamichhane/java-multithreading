package reentrant.program.using.trylock.with.parameter;

import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.ReentrantLock;

public class MyThread extends Thread {
	
	ReentrantLock I = new ReentrantLock();
	
	public MyThread(String name) {
		super(name);
	}
	
	public void run() {
		try {
			do {
			if(I.tryLock(5000,TimeUnit.MILLISECONDS)) {
				System.out.println(Thread.currentThread().getName()+"...got lock and performing safe operations");
				try {
					Thread.sleep(10000);
				} catch (InterruptedException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				I.unlock();
				break;
			}
			else {
				System.out.println(Thread.currentThread().getName()+"... unable to get lock hence performing alternative operations");
				
			}
			}while(true);
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

}
