package thread.synchronization.demo.program.with.synchronize.block;


public class Test {
	
	/* 
	      if very few line of the code required synchronization then it is not recomended
	      to declare entire method as synchronizer. we have to enclose those few line
	      of the code by using synchronizer block.
	      the main advanteage of synchronizer block over synchronizer mehtod is it reduces
	      waiting time of thread and improve preformance of the system.
	      Real world example: the highway operating only one vechile and multiple with
	      bride on the center only to route vechile.
	      
	      
	      
	      
	      we can declare synchronizer block as follows:
	      i. to get lock of current object:->
	      synchronized(this){
	        if a thread got a lock of current object then only it is allowed to 
	        execute this area inside block.
	      }
	      
	      ii.to get lock of particular object->
	      synchronized(p){
	       if a thread got a lock of particular object p then only it is allowed to 
	       execute this area inside block.
	       }
	       
	      iii>to get class level lock->
	      synchronized(Display.class){
	       if a thread got class level lock of display class then the only it is allowed to 
	       execute area inside block.
	       }
	      
	      
	      
	 */

	public static void main(String[] args) {
		
		Display d = new Display();
		MyThread t = new MyThread(d,"Dhoni");
		MyThread t2 = new MyThread(d,"Yuvaraj");
		t2.start();
		t.start(); 

	}

}
